version: "3.9"

services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    
  broker:
    image: wurstmeister/kafka
    container_name: broker
    restart: always
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME= localhost
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

 # zookeeper:
  #  image: confluentinc/cp-zookeeper:latest
   # restart: always
    #container_name: zookeeper
    #environment:
     # ZOOKEEPER_CLIENT_PORT: 2181
      #ZOOKEEPER_TICK_TIME: 2000

  # image: confluentinc/cp-kafka:latest
   # container_name: broker
    #restart: always
    #ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
     # - "29092:29092"
    #depends_on:
     # - zookeeper
    #environment:
     # KAFKA_BROKER_ID: 1
      #KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      #KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo:latest
    hostname: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
       - db-data:/data/db

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - broker
    ports:
      - "8082:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=localhost
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
      - KAFKA_CLUSTERS_0_READONLY=true

  keycloak:
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    image: quay.io/keycloak/keycloak:latest
    command:
      - start-dev
    ports:
      - "8081:8080"
    restart: always
    networks:
      - local-keycloak

volumes:
  db-data:

networks:
  local-keycloak:
